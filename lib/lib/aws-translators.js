// Generated by CoffeeScript 1.6.3
(function() {
  var Q, dataTrans, getKey, _;

  _ = require('lodash');

  dataTrans = require('./data-translators');

  Q = require('q');

  module.exports.processAllPages = function(deferred, execute, functionName, params) {
    var resultHandler, stats,
      _this = this;
    stats = {
      Count: 0
    };
    resultHandler = function(result, err) {
      if (err) {
        return deferred.reject(err);
      }
      deferred.notify(dataTrans.fromDynamo(result.Items));
      stats.Count += result.Count;
      if (result.LastEvaluatedKey) {
        params.ExclusiveStartKey = result.LastEvaluatedKey;
        return execute(functionName, params).then(resultHandler);
      } else {
        return deferred.resolve(stats);
      }
    };
    execute(functionName, params).then(function(result) {
      return resultHandler(result);
    }).done();
    return deferred.promise;
  };

  module.exports.getKeySchema = function(tableDescription) {
    var keySchema, _ref, _ref1;
    keySchema = tableDescription.Table.KeySchema;
    return {
      hashKeyName: keySchema.HashKeyElement.AttributeName,
      hashKeyType: keySchema.HashKeyElement.AttributeType,
      rangeKeyName: keySchema != null ? (_ref = keySchema.RangeKeyElement) != null ? _ref.AttributeName : void 0 : void 0,
      rangeKeyType: keySchema != null ? (_ref1 = keySchema.RangeKeyElement) != null ? _ref1.AttributeType : void 0 : void 0
    };
  };

  getKey = function(params, keySchema) {
    var key;
    if (!_.isObject(params)) {
      params = {
        hash: params + ''
      };
    }
    key = {};
    key[keySchema.hashKeyName] = {};
    key[keySchema.hashKeyName][keySchema.hashKeyType] = params.hash + '';
    if (params.range) {
      key[keySchema.rangeKeyName] = {};
      key[keySchema.rangeKeyName][keySchema.rangeKeyType] = params.range + '';
    }
    return key;
  };

}).call(this);
